/**  * 
 */
package com.uc_mobileapps.tests.sqlite.db;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import com.uc_mobileapps.tests.sqlite.bo.schema.CommonTypesSchema;
import com.uc_mobileapps.tests.sqlite.bo.schema.Version1Schema;
import com.uc_mobileapps.tests.sqlite.bo.schema.Version2Schema;

import com.uc_mobileapps.tests.sqlite.provider.GeneralTestsProvider;

import com.uc_mobileapps.tests.sqlite.bo.schema.AdvancedTypesSchema;

/**
 * Database helper that creates and/or upgrades the schema
 */
public class GeneralTestsDBOpenHelper extends SQLiteOpenHelper {

	/**
	 * Name of the database
	 */
	public static final String DB_NAME = "GeneralTestsDBOpenHelper.db";

	/**
	 * The version of this database for the current release
	 */
	private static final int DB_VERSION = 3;

	/**
	 * Default constructor for the helper
	 */
	public GeneralTestsDBOpenHelper(Context paramContext) {
		this(paramContext, DB_NAME, null, DB_VERSION);
	}

	protected GeneralTestsDBOpenHelper(Context paramContext, String paramString, SQLiteDatabase.CursorFactory paramCursorFactory, int paramInt) {
		super(paramContext, paramString, paramCursorFactory, paramInt);
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		seifeCreate(db);
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		seifeUpgrade(db, oldVersion, newVersion);
	}

	//[begin seife autogenerated@

	/**
	 * Outsourced data creation logic of automatically created tables, see {@see #onCreate(SQLiteDatabase)}
	 */
	public void seifeCreate(SQLiteDatabase db) { 
		for (String ddl : Version2Schema.instance().getTableScripts()) {
			db.execSQL(ddl);
		}
 
		for (String ddl : AdvancedTypesSchema.instance().getTableScripts()) {
			db.execSQL(ddl);
		}
 
		for (String ddl : Version1Schema.instance().getTableScripts()) {
			db.execSQL(ddl);
		}
 
		for (String ddl : CommonTypesSchema.instance().getTableScripts()) {
			db.execSQL(ddl);
		}
	}
	
	/**
	 * Outsourced data update logic of automatically created tables, see {@see #onUpgrade(SQLiteDatabase,int,int)}
	 */
	public void seifeUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		if (oldVersion < 2 && newVersion >= 2) { 
			for (String ddl : Version2Schema.instance().getTableScripts()) {
				db.execSQL(ddl);
			}
			db.execSQL("ALTER TABLE " + Version1Schema.TBL_VERSION1 + " ADD COLUMN " + Version1Schema.COL_ADDED_IN_V2 + " text");
		}
		if (oldVersion < 3 && newVersion >= 3) { 
			db.execSQL("ALTER TABLE " + Version2Schema.TBL_VERSION2 + " ADD COLUMN " + Version2Schema.COL_ADDED_IN_V3 + " text");
		}
	}

	//@end seife autogenerated]
}

