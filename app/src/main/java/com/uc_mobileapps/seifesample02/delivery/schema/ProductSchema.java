package com.uc_mobileapps.seifesample02.delivery.schema;
import android.content.ContentValues;
import android.database.Cursor;

import com.uc_mobileapps.seifesample02.delivery.Product;

import java.util.ArrayList;
import java.util.List;

public class ProductSchema { 
	//[begin seife autogenerated@

	/**
	 * Table name of the Product table
	 */
	public static String TBL_PRODUCT = "product";
	

	public static String COL_ID = "id";

	public static String COL_DESCRIPTION = "description";

	public static String COL_NAME = "name";

	public static String COL_PRICE = "price";

	/** Fully qualified column name of {@link #COL_ID */
	public static String COL_ID_FQN = "product.id";

	/** Fully qualified column name of {@link #COL_DESCRIPTION */
	public static String COL_DESCRIPTION_FQN = "product.description";

	/** Fully qualified column name of {@link #COL_NAME */
	public static String COL_NAME_FQN = "product.name";

	/** Fully qualified column name of {@link #COL_PRICE */
	public static String COL_PRICE_FQN = "product.price";
	
	/**
	 * All columns
	 */
	public static String[] COLUMNS = new String[] { COL_ID, COL_DESCRIPTION, COL_NAME, COL_PRICE	};

	/**
	 * Table creation script
	 */
	public static final String SQL_CREATE_TABLE_PRODUCT =
			"create table " + TBL_PRODUCT + " (" +
					COL_ID + " integer primary key autoincrement," +
					COL_DESCRIPTION + " text," +
					COL_NAME + " text," +
					COL_PRICE + " text" +
					")";


 

	private static ProductSchema schema = new ProductSchema();
	public static ProductSchema instance() {
		return schema;
	}

	/**
	 * Checks for mandatory constraints defined on fields
	 */
	public boolean checkConstraints(ContentValues contentValues) {
		return true;
	}
	
	/**
	 * Gets all attribute values of the bo as key value pairs
	 * @param bo may not be null
	 * @return new instance of {@link ContentValues}
	 */
	public ContentValues getContentValues(Product bo) {
		ContentValues contentValues = new ContentValues();

		if (bo.getId() != null) {
			contentValues.put(COL_ID, bo.getId());
		}
		contentValues.put(COL_DESCRIPTION, bo.getData().getDescription());
		contentValues.put(COL_NAME, bo.getData().getName());
		contentValues.put(COL_PRICE, (bo.getData().getPrice()!=null) ?  bo.getData().getPrice().toString() : null);
		return contentValues;
	}

	/**
	 * Sets all attributes from the cursor
	 * @param cursorFrom the cursor to read from
	 * @param bo may be null
	 * @return the bo passed as a parameter or a new instance
	 */
	public Product readFromCursor(Cursor cursorFrom, Product bo)
	{
		if (bo == null) {
			bo = new Product();
		}
		final Cursor c = cursorFrom; 

		bo.setId(c.isNull(c.getColumnIndex(COL_ID)) ? null : c.getLong(c.getColumnIndex(COL_ID)));
		bo.getData().setDescription(c.getString(c.getColumnIndex(COL_DESCRIPTION)));
		bo.getData().setName(c.getString(c.getColumnIndex(COL_NAME)));
		bo.getData().setPrice(c.isNull(c.getColumnIndex(COL_PRICE)) ? null : new java.math.BigDecimal(c.getString(c.getColumnIndex(COL_PRICE))));
		return bo;
	}
	
	
	/**
	 * @return hard-coded table creation and index scripts
	 */
	public List<String> getTableScripts() {
		List<String> result = new ArrayList<String>();
		result.add(SQL_CREATE_TABLE_PRODUCT); 
		return result;
	}

 
	//@end seife autogenerated]

	
}
